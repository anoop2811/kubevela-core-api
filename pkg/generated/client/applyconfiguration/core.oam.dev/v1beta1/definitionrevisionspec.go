/*
Copyright 2023 The KubeVela Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	common "github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
)

// DefinitionRevisionSpecApplyConfiguration represents an declarative configuration of the DefinitionRevisionSpec type for use
// with apply.
type DefinitionRevisionSpecApplyConfiguration struct {
	Revision               *int64                                    `json:"revision,omitempty"`
	RevisionHash           *string                                   `json:"revisionHash,omitempty"`
	DefinitionType         *common.DefinitionType                    `json:"definitionType,omitempty"`
	ComponentDefinition    *ComponentDefinitionApplyConfiguration    `json:"componentDefinition,omitempty"`
	TraitDefinition        *TraitDefinitionApplyConfiguration        `json:"traitDefinition,omitempty"`
	PolicyDefinition       *PolicyDefinitionApplyConfiguration       `json:"policyDefinition,omitempty"`
	WorkflowStepDefinition *WorkflowStepDefinitionApplyConfiguration `json:"workflowStepDefinition,omitempty"`
}

// DefinitionRevisionSpecApplyConfiguration constructs an declarative configuration of the DefinitionRevisionSpec type for use with
// apply.
func DefinitionRevisionSpec() *DefinitionRevisionSpecApplyConfiguration {
	return &DefinitionRevisionSpecApplyConfiguration{}
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithRevision(value int64) *DefinitionRevisionSpecApplyConfiguration {
	b.Revision = &value
	return b
}

// WithRevisionHash sets the RevisionHash field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RevisionHash field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithRevisionHash(value string) *DefinitionRevisionSpecApplyConfiguration {
	b.RevisionHash = &value
	return b
}

// WithDefinitionType sets the DefinitionType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DefinitionType field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithDefinitionType(value common.DefinitionType) *DefinitionRevisionSpecApplyConfiguration {
	b.DefinitionType = &value
	return b
}

// WithComponentDefinition sets the ComponentDefinition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ComponentDefinition field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithComponentDefinition(value *ComponentDefinitionApplyConfiguration) *DefinitionRevisionSpecApplyConfiguration {
	b.ComponentDefinition = value
	return b
}

// WithTraitDefinition sets the TraitDefinition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TraitDefinition field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithTraitDefinition(value *TraitDefinitionApplyConfiguration) *DefinitionRevisionSpecApplyConfiguration {
	b.TraitDefinition = value
	return b
}

// WithPolicyDefinition sets the PolicyDefinition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PolicyDefinition field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithPolicyDefinition(value *PolicyDefinitionApplyConfiguration) *DefinitionRevisionSpecApplyConfiguration {
	b.PolicyDefinition = value
	return b
}

// WithWorkflowStepDefinition sets the WorkflowStepDefinition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WorkflowStepDefinition field is set to the value of the last call.
func (b *DefinitionRevisionSpecApplyConfiguration) WithWorkflowStepDefinition(value *WorkflowStepDefinitionApplyConfiguration) *DefinitionRevisionSpecApplyConfiguration {
	b.WorkflowStepDefinition = value
	return b
}
